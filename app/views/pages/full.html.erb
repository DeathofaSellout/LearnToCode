<%= render "shared/nav" %>
<%= render "shared/code_nav" %>
<div class="hero container">
  <section class="row">
      <div class="grid">
        <h1>Full Stack Web Development</h1>
        <p>Time to learn how to build full apps. This is where are all of your
           hard work pays off. The most satisfying part, when you have a completed
           web app that you can call your own.
        </p>
        <!-- <img src="../../assets/imgs/flow.jpg" class="picTwo" alt="flow"> -->
          <h1> Different Tech Stacks</h1>
          <p> There are a lot of different Tech Stacks. A Tech Stack is a full
            stack of web technologies
            you use to build a web app, divided into Front End and Back End.
            Front End is what you see, Back End
            is where are all of the information is stored. A web app is a
            website like Facebook or Google. Full Stack Web Development is not the exact
            same thing as building an IOS app or Android app, career wise.They
            do share similarities, but each of those
            are their own careers in tech.
            The two tech stacks that I am experienced with are Ruby on Rails
            and the MERN/MEAN tech stacks. Yes there are others,
            but focus on one, then you can learn any other. For now, we are
            going to focus on the MEN stack. Then you can learn MEAN/MERN stacks.
            MERN stands for MongoDB, Express, React, and Node js. MEAN stands
            for MongoDB, Express, Angular, and Node js.
            These are Javascript based Full Stacks. You will be using the MVC
            architectural paradigm: Model-View-Controller.
          </p>
      <h1>HTML & CSS</h1>
         <p>What's displayed in your browser. Hyper Text Markup Language (HTML) is like the bones,
            the physical framework for your website. It's the
            text you are reading right now and how it is arranged.
            Cascading Style Sheets (CSS) is the styling of your website. Changing how your text looks,
            how your images are presented, and the colors you see. CSS can also
            do more. HTML and CSS are part of the View in MVC.
         </p>
      <h2>Sites To Learn HTML & CSS</h2>
          <a href="https://www.codecademy.com/">Learn HTML & CSS At CodeAcademy.com</a>
            <p>Once again, CodeAcademy has a lot! You can do their HTML and CSS courses. Start here. It will get you
               familiar with all of the basics.
            </p>
          <a href="https://learn.shayhowe.com/html-css/building-your-first-web-page/">Learn HTML & CSS From Shay Howe</a>
            <p>This is an extremely thorough run through on how to build an elegant website with HTML and
               CSS. I highly suggest doing this after a CodeAcademy run through. It will take you to the next
               level.
            </p>
          <a href="https://learn.shayhowe.com/advanced-html-css/">Learn HTML & CSS From Shay Howe Part 2</a>
            <p>This is an advanced and extremely thorough run through on how to
               build an even more elegant website with HTML and
               CSS, but adding jQuery and more. Extended from the previous example.
            </p>
      <h1>Materialize and Bootstrap</h1>
        <p>These two are very similar, they just have creative differences.</p>
          <a href="http://materializecss.com/">Materialize's Website</a>
            <p>A responsive CSS framework that takes your HTML, CSS, and
               Javascript to a better place. Make your website
               look amazing and help it react like a Single Page Application.
               I do prefer Materialize over Bootstrap.
            </p>
          <a href="http://getbootstrap.com/">Bootstrap's Website</a>
            <p>Quoted directly from their website: "Build responsive,
               mobile-first projects on the web with the world's
               most popular front-end component library.
               Bootstrap is an open source toolkit for developing with HTML,
               CSS, and JS. Quickly prototype
               your ideas or build your entire app with our Sass variables
               and mixins, responsive grid system, extensive prebuilt
               components, and powerful plugins built on jQuery." Some
               technologies will only work with either bootstrap or materialize.
            </p>
      <h1>jQuery</h1>
        <a href="https://jquery.com/">jQuery's Website</a>
        <p>jQuery is a javascript library. Use this website to learn each
           function, get to know their docs.
           It is a part of the View in MVC. jQuery helps bring your website alive,
           adding animation and interactivity to your website. This is
           a client side technology.
           It listens for events, like when you click on a button or push
           down a key, then it triggers
           an action! Not to get too in depth, just try the link below and
           take your JS/Front end to a whole new level!
        </p>
        <a href="https://www.codecademy.com/">Learn jQuery On CodeAcademy.com</a>
          <p>You've got it, CodeAcademy! They have a great jQuery series.
             I've done other sites jQuery series, like
             <a href="https://www.codeschool.com/">codeschool.com</a>
             , but they were hard to follow for me.
             Not as clear. CodeAcademy does a great job.
          </p>
      <h1>Node js</h1>
        <a href="https://nodejs.org/en/">Nodejs.org Website</a>
          <p>Taken directly from their website- "Node.js® is a JavaScript
            runtime built on Chrome's V8 JavaScript engine. Node.js uses an
            event-driven, non-blocking I/O model that makes it lightweight and efficient.
            Node.js' package ecosystem, npm, is the
            largest ecosystem of open source libraries in the world."
            Node js is a server side technology. It's part of the back end
            of your web app. Node.js is an asynchronous, event-driven engine.
          </p>
        <a href="https://courses.edx.org">Learn To Code From Edx.org</a>
          <p>Edx has a lot of courses, mostly free. You can pay if you want
            certificates for your work. They have courses on
            every part of a full stack. They just use sql instead of Mongodb
            for their database. Both are great.
            They have a node js course you can take for free.
          </p>
        <a href="https://www.w3schools.com/nodejs/nodejs_intro.asp">Learn To Code From w3schools.com</a>
          <p> w3schools.com is an exhaustive resource for all things web
            related. I constantly use them for quick CSS and
            HTML hints. This link brings you to their node course. Once again,
            just like edx, they teach it in conjunction with sql.
          </p>
      <h1>Express</h1>
        <a href="https://expressjs.com/">Express's Website</a>
          <p>"Express is a minimal and flexible Node.js web application framework that provides a robust
             set of features for web and mobile applications." - Expressjs.com. Express is the Controller
             in MVC. Express makes your life so much easier! Get to know it.
          </p>
        <a href="https://developer.mozilla.org/en-US/docs/Learn/Server-side/Express_Nodejs">Mozilla's Docs on Express</a>
          <p> The above tutorial will help you work through your first express app.
              More importanly Mozilla Docs has documentation on everything
              Javascript. Bookmark that site.
          </p>
      <h2>EJS</h2>
        <a href="https://www.npmjs.com/package/ejs">EJS's Website</a>
          <p>A templating engine given to you by Express, Embedded JavaScript.
             Allows you to run javascript in your HTML.
          </p>
      <h1>MongoDB</h1>
        <a href="https://docs.mongodb.com/manual/tutorial/">MongoDB Tutorial</a>
          <p>A NoSQL database program. Document database – used by your
             backend application to store its data as JSON
             (JavaScript Object Notation) documents. Uses JSON-like documents with schemas.
             Very popular right now. This is the model in MVC.
          </p>
      <h1>Mongoose</h1>
        <a href="http://mongoosejs.com/">Mongoose JS's Website</a>
          <p>Mongoose is an ORM (Object Relational Mapping)for MongoDB,
             written in node.js. You will use this site religiously at first.
             It's docs are what you need to work that Mongo database.
          </p>
      <h1>Angular 2.0 (and above)</h1>
        <a href="https://angular.io/">Angular.io's Website</a>
          <p> A front end framework, originally created and maintained by
              Google. Angular uses Typescript. This is the official site with docs.
              Stick with Angular 2.0 and above. A lot of companies are using
              Angular 2.0. Angular is the View in your MVC.
              Learn React and Angular last. They are the hardest to learn and
              will not make much sense without learning
              the basics first. Angular was a more natural fit for me over
              React, due to my Java experience.
          </p>
        <a href="https://www.codecademy.com/learn/learn-angularjs">Learn Angular From CodeAcademy.com</a>
          <p> Pretty good tutorials to get you started using Angular. Eventually
              you will move on.
          </p>
        <a href="https://courses.edx.org">Learn Angular On Edx.org</a>
          <p>Edx has angular courses. More practice the better. Get it.
          </p>
      <h1>React</h1>
        <a href="https://reactjs.org/">Reactjs.org</a>
          <p>A front end framework created by facebook. React is all about
             components, making the front end act like magic.
             This site has tutorials to get going and all the docs you need.
             React is the View in your MVC. Learn React and
             Angular last. They are the hardest to learn and will not make
             much sense without learning the basics first.
          </p>
        <a href="https://www.codecademy.com/learn/react-101">Learn React From CodeAcademy</a>
          <p> Pretty good tutorials to get you started using React.
          </p>
        <a href="https://courses.edx.org">Learn React From Edx.org</a>
          <p>Edx has a some courses on React to get you going.
          </p>
      <h1>MEAN/MERN</h1>
        <p>A full tech stack that is everything you need to develop full web
           apps. Full MVC. There are two versions, because you
           can use either Angular or React for a front end framework.
           Typically you would only use Angular or React for
           large web apps, but start learning Angular or React after you've
           learned everything else listed on this page.
        </p>
        <a href="http://info-mongodb-com.s3.amazonaws.com/_com_assets/collateral/modern_app_stack_ebook_rgb.pdf">Complete Guide To MEAN/MERN</a>
          <p>This is an extremely thorough run through on the full MEAN/MERN
             tech stack. Pretty self explanatory.
             Great place to start. This will help you get a sense of how all
             of the technologies listed below work together.
          </p>
      </div>
    </section>
</div>
<%= render "shared/footer" %>
